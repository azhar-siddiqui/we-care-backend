openapi: 3.0.3
info:
  title: Admin Authentication API
  description: API for admin registration, authentication, and session management
  version: 1.0.0
servers:
  - url: https://we-care-backend-tiyp.onrender.com/api/v1/auth
    description: Local development server
paths:
  /admin:
    post:
      summary: Register a new admin
      description: Registers a new admin and sends an OTP to the provided email for verification.
      tags:
        - Admin Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - labName
                - ownerName
                - email
                - password
                - contactNumber
              properties:
                labName:
                  type: string
                  example: "HealthLab"
                ownerName:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  format: email
                  example: "admin@example.com"
                password:
                  type: string
                  format: password
                  example: "Password123!"
                contactNumber:
                  type: string
                  example: "+1234567890"
                previousSoftware:
                  type: string
                  nullable: true
                  example: "LabSoftwareX"
      responses:
        "200":
          description: OTP sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "OTP sent to email. Please verify to complete registration."
                  data:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "admin@example.com"
        "400":
          description: Validation error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /admin/verify-otp:
    post:
      summary: Verify OTP for admin registration
      description: Verifies the OTP sent to the admin's email to complete registration.
      tags:
        - Admin Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
              properties:
                email:
                  type: string
                  format: email
                  example: "admin@example.com"
                otp:
                  type: string
                  example: "123456"
      responses:
        "201":
          description: Admin created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Admin created successfully"
                  data:
                    $ref: "#/components/schemas/Admin"
        "400":
          description: Invalid OTP or email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /admin/login:
    post:
      summary: Admin login
      description: Authenticates an admin and returns access and refresh tokens.
      tags:
        - Admin Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "admin@example.com"
                password:
                  type: string
                  format: password
                  example: "Password123!"
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Admin logged in successfully"
                  data:
                    type: object
                    properties:
                      admin:
                        $ref: "#/components/schemas/Admin"
                      accessToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            headers:
              Set-Cookie:
                schema:
                  type: string
                  example: "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; SameSite=Strict"
        "401":
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /admin/login/refresh-token:
    post:
      summary: Refresh access token
      description: Generates a new access token using a valid refresh token.
      tags:
        - Admin Authentication
      requestBody:
        required: false
      responses:
        "200":
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Token refreshed successfully"
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            headers:
              Set-Cookie:
                schema:
                  type: string
                  example: "refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...; HttpOnly; Secure; SameSite=Strict"
        "401":
          description: Invalid or missing refresh token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /admin/logout:
    get:
      summary: Admin logout
      description: Logs out the admin by clearing the refresh token.
      tags:
        - Admin Authentication
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Logged out successfully"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Admin:
      type: object
      properties:
        id:
          type: string
          example: "123e4567-e89b-12d3-a456-426614174000"
        labName:
          type: string
          example: "HealthLab"
        ownerName:
          type: string
          example: "John Doe"
        email:
          type: string
          format: email
          example: "admin@example.com"
        contactNumber:
          type: string
          example: "+1234567890"
        role:
          type: string
          example: "admin"
        createdAt:
          type: string
          format: date-time
          example: "2025-06-09T12:00:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-06-09T12:00:00Z"
    Error:
      type: object
      properties:
        status:
          type: integer
          example: 400
        error:
          type: string
          example: "Validation failed"
        message:
          type: string
          example: "Validation failed: Email is required, Password is required"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
